# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven and Docker

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: solitare

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
      
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
#     - name: Log into GitHub registry
#       run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

    - name: Log in to Docker Hub registry
      run: echo '${{ secrets.DOCKER_HUB_TOKEN }}' | docker login --username  ${{ secrets.DOCKER_USER_NAME }} --password-stdin
          
    - name: Build Docker image with Maven
      run: |
        mvn docker:build -DpushImageTag
        #docker build . --file Dockerfile --tag $IMAGE_NAME
        #docker tag $IMAGE_NAME $IMAGE_NAME:$(date +%s)
        
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
    - name: Save DigitalOcean kubeconfig
      run: doctl kubernetes cluster kubeconfig save k8s-1-17-5-do-0-nyc1-1590032691719
    
    - name: Deploy to DigitalOcean Kubernetes
      run: |
        export VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | tail -n 1)
        sed s/%VERSION%/$VERSION/g deployment/deployment.yaml > deployment.yaml
        kubectl apply -f $GITHUB_WORKSPACE/deployment.yaml

    - name: Verify deployment
      run: kubectl rollout status -n andrewfesta deployment/solitare-deploy
