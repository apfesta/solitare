apiVersion: apps/v1
kind: Deployment
metadata:
  name: solitare-deploy
  namespace: andrewfesta
  labels:
    app: solitare
spec:
  replicas: 1
  selector:
    matchLabels:
      app: solitare
  strategy: {}
  template:
    metadata:
      labels:
        app: solitare
    spec:
      containers:
      - image: apfesta/double-solitare:%VERSION%
        name: solitare
        ports:
        - containerPort: 8080
        resources: {}
        env:
        - name: SPRING_OPTS
          value: "--spring.profiles.active=none --server.port=8080"
      imagePullSecrets:
      - name: dockerhub
---
apiVersion: v1
kind: Service
metadata:
  name: solitare-svc
  namespace: andrewfesta
  labels:
    app: solitare
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: solitare
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: solitare-ingress
  namespace: andrewfesta
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Access-Control-Allow-Origin: $http_origin";
spec:
  tls:
  - hosts:
    - solitare.andrewfesta.com
    secretName: solitare-tls
  rules:
  - host: solitare.andrewfesta.com
    http:
      paths:
      - path: /
        backend:
          serviceName: solitare-svc
          servicePort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
  annotations:
    service.beta.kubernetes.io/do-loadbalancer-protocol: http
    service.beta.kubernetes.io/do-loadbalancer-tls-ports: "443"
    service.beta.kubernetes.io/do-loadbalancer-redirect-http-to-https: "true"
    # Use "doctl compute certificate list" to get this ID
    service.beta.kubernetes.io/do-loadbalancer-certificate-id: “a2e2e86d-45e7-43bd-a8e4-637937810fc7”
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      targetPort: 80
    - name: https
      port: 443
      targetPort: 80
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
