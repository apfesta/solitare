<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.andrewfesta</groupId>
	<artifactId>double-solitare</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>double-solitare</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>11</java.version>
		
		<version.webjars-locator>0.30</version.webjars-locator>
		<version.bootstrap>4.1.3</version.bootstrap>
		<version.jquery>3.2.1</version.jquery>
		
		<docker.repository.name>apfesta</docker.repository.name>
		<docker.image.name>${project.artifactId}</docker.image.name>
		<docker.src>src/main/docker</docker.src>
		
		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ss'Z'</maven.build.timestamp.format>
	</properties>

	<dependencies>
		<!-- Spring Boot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<!-- WebJars -->
		<dependency>
   			<groupId>org.webjars</groupId>
    		<artifactId>webjars-locator</artifactId>
    		<version>${version.webjars-locator}</version>
		</dependency>
		<dependency>
		    <groupId>org.webjars</groupId>
		    <artifactId>bootstrap</artifactId>
		    <version>${version.bootstrap}</version>
		</dependency>
		<dependency>
		    <groupId>org.webjars</groupId>
		    <artifactId>jquery</artifactId>
		    <version>${version.jquery}</version>
		</dependency>

		<!-- Dev tools -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		
		<!-- Testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Spring Boot Plugin -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<!-- Docker Plugin -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>1.2.1</version>
				<configuration>
					<useConfigFile>true</useConfigFile>
					<imageName>${docker.repository.name}/${docker.image.name}</imageName>
					<forceTags>true</forceTags>
					<imageTags><imageTag>${project.version}</imageTag></imageTags>
					<dockerDirectory>${project.build.directory}/docker-ready</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
			
			<!-- Resource filtering for docker directory -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>prepare-dockerfile</id>
						<phase>validate</phase>
						<goals><goal>copy-resources</goal></goals>
						<configuration>
							<outputDirectory>${project.build.directory}/docker-ready</outputDirectory>
							<escapeString>\</escapeString>
							<resources>
								<directory>${docker.src}</directory>
								<filtering>true</filtering>
							<resources>
						</configuration>
					</execution>
				</executions>
			</plugin?
		</plugins>
	</build>

</project>
